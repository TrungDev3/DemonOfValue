/*
 * ConsenSys NFT Admin API
 *
 * @generated by <a href=\"https://consensys.net/nft/\">ConsenSys NFT</a>.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Infura.SDK.Organization
{
    /// <summary>
    /// InputListingContext
    /// </summary>
    [DataContract(Name = "InputListingContext")]
    public class ListingInput
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListingInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ListingInput()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ListingInput" /> class.
        /// </summary>
        /// <param name="collectionId">collectionId.</param>
        /// <param name="currency">currency (required).</param>
        /// <param name="endTime">UtcDateTime.</param>
        /// <param name="itemId">itemId.</param>
        /// <param name="itemIds">itemIds.</param>
        /// <param name="maxQuantityPerTx">maxQuantityPerTx (required).</param>
        /// <param name="paymentProviders">paymentProviders (required).</param>
        /// <param name="policy">policy (required).</param>
        /// <param name="price">Uint256 (required).</param>
        /// <param name="quantityListed">quantityListed.</param>
        /// <param name="startTime">UtcDateTime.</param>
        /// <param name="tokenIds">tokenIds.</param>
        /// <param name="tokenRanges">tokenRanges.</param>
        public ListingInput(Guid? collectionId = default(Guid?), string currency = default(string),
            DateTime? endTime = default(DateTime?), Guid? itemId = default(Guid?),
            List<Guid> itemIds = default(List<Guid>), int maxQuantityPerTx = default(int),
            List<string> paymentProviders = default(List<string>),
            ListingInputPolicy policy = default(ListingInputPolicy), string price = default(string),
            int? quantityListed = default(int?), DateTime? startTime = default(DateTime?),
            List<string> tokenIds = default(List<string>),
            List<ListingInputTokenRanges> tokenRanges = default(List<ListingInputTokenRanges>))
        {
            // to ensure "currency" is required (not null)
            if (currency == null)
            {
                throw new ArgumentNullException(
                    "currency is a required property for InputListingContext and cannot be null");
            }

            this.Currency = currency;
            this.MaxQuantityPerTx = maxQuantityPerTx;
            // to ensure "paymentProviders" is required (not null)
            if (paymentProviders == null)
            {
                throw new ArgumentNullException(
                    "paymentProviders is a required property for InputListingContext and cannot be null");
            }

            this.PaymentProviders = paymentProviders;
            // to ensure "policy" is required (not null)
            if (policy == null)
            {
                throw new ArgumentNullException(
                    "policy is a required property for InputListingContext and cannot be null");
            }

            this.Policy = policy;
            // to ensure "price" is required (not null)
            if (price == null)
            {
                throw new ArgumentNullException(
                    "price is a required property for InputListingContext and cannot be null");
            }

            this.Price = price;
            this.CollectionId = collectionId;
            this.EndTime = endTime;
            this.ItemId = itemId;
            this.ItemIds = itemIds;
            this.QuantityListed = quantityListed;
            this.StartTime = startTime;
            this.TokenIds = tokenIds;
            this.TokenRanges = tokenRanges;
        }

        /// <summary>
        /// Gets or Sets CollectionId
        /// </summary>
        [DataMember(Name = "collection_id", EmitDefaultValue = true)]
        public Guid? CollectionId { get; set; }

        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        [DataMember(Name = "currency", IsRequired = true, EmitDefaultValue = true)]
        public string Currency { get; set; }

        /// <summary>
        /// UtcDateTime
        /// </summary>
        /// <value>UtcDateTime</value>
        [DataMember(Name = "end_time", EmitDefaultValue = true)]
        public DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or Sets ItemId
        /// </summary>
        [DataMember(Name = "item_id", EmitDefaultValue = true)]
        public Guid? ItemId { get; set; }

        /// <summary>
        /// Gets or Sets ItemIds
        /// </summary>
        [DataMember(Name = "item_ids", EmitDefaultValue = true)]
        public List<Guid> ItemIds { get; set; }

        /// <summary>
        /// Gets or Sets MaxQuantityPerTx
        /// </summary>
        [DataMember(Name = "max_quantity_per_tx", IsRequired = true, EmitDefaultValue = true)]
        public int MaxQuantityPerTx { get; set; }

        /// <summary>
        /// Gets or Sets PaymentProviders
        /// </summary>
        [DataMember(Name = "payment_providers", IsRequired = true, EmitDefaultValue = true)]
        public List<string> PaymentProviders { get; set; }

        /// <summary>
        /// Gets or Sets Policy
        /// </summary>
        [DataMember(Name = "policy", IsRequired = true, EmitDefaultValue = true)]
        public ListingInputPolicy Policy { get; set; }

        /// <summary>
        /// Uint256
        /// </summary>
        /// <value>Uint256</value>
        [DataMember(Name = "price", IsRequired = true, EmitDefaultValue = true)]
        public string Price { get; set; }

        /// <summary>
        /// Gets or Sets QuantityListed
        /// </summary>
        [DataMember(Name = "quantity_listed", EmitDefaultValue = true)]
        public int? QuantityListed { get; set; }

        /// <summary>
        /// UtcDateTime
        /// </summary>
        /// <value>UtcDateTime</value>
        [DataMember(Name = "start_time", EmitDefaultValue = true)]
        public DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or Sets TokenIds
        /// </summary>
        [DataMember(Name = "token_ids", EmitDefaultValue = true)]
        public List<string> TokenIds { get; set; }

        /// <summary>
        /// Gets or Sets TokenRanges
        /// </summary>
        [DataMember(Name = "token_ranges", EmitDefaultValue = true)]
        public List<ListingInputTokenRanges> TokenRanges { get; set; }
    }
}
